{"version":3,"file":"sanitize-node.js","names":["omitUndefined","data","isPlainObject","p","undefined","filter","isTypeSupported","type","isSupported","Date","sanitizeNode","isNode","path","Set","isArray","has","add","returnData","anyFieldChanged","hasLengthProperty","Object","prototype","hasOwnProperty","call","lengthProperty","length","value","key"],"sources":["../../src/utils/sanitize-node.ts"],"sourcesContent":["import _ from \"lodash\"\n\nimport type { IGatsbyNode } from \"../redux/types\"\nimport type { GatsbyIterable } from \"../datastore/common/iterable\"\n\ntype Data = IGatsbyNode | GatsbyIterable<IGatsbyNode>\n\ntype OmitUndefined = (data: Data) => Partial<Data>\n\n/**\n * @param {Object|Array} data\n * @returns {Object|Array} data without undefined values\n */\nconst omitUndefined: OmitUndefined = data => {\n  const isPlainObject = _.isPlainObject(data)\n  if (isPlainObject) {\n    return _.pickBy(data, p => p !== undefined)\n  }\n\n  return (data as GatsbyIterable<IGatsbyNode>).filter(p => p !== undefined)\n}\n\ntype isTypeSupported = (data: Data) => boolean\n\n/**\n * @param {*} data\n * @return {boolean} Boolean if type is supported\n */\nconst isTypeSupported: isTypeSupported = data => {\n  if (data === null) {\n    return true\n  }\n\n  const type = typeof data\n  const isSupported =\n    type === `number` ||\n    type === `string` ||\n    type === `boolean` ||\n    data instanceof Date\n\n  return isSupported\n}\n\ntype sanitizeNode = (\n  data: Data,\n  isNode?: boolean,\n  path?: Set<unknown>\n) => Data | undefined\n\n/**\n * Make data serializable\n * @param {(Object|Array)} data to sanitize\n * @param {boolean} isNode = true\n * @param {Set<string>} path = new Set\n */\nexport const sanitizeNode: sanitizeNode = (\n  data,\n  isNode = true,\n  path = new Set()\n) => {\n  const isPlainObject = _.isPlainObject(data)\n  const isArray = _.isArray(data)\n\n  if (isPlainObject || isArray) {\n    if (path.has(data)) return data\n    path.add(data)\n\n    const returnData = isPlainObject\n      ? ({} as IGatsbyNode)\n      : ([] as Array<IGatsbyNode>)\n    let anyFieldChanged = false\n\n    // _.each is a \"Collection\" method and thus objects with \"length\" property are iterated as arrays\n    const hasLengthProperty = isPlainObject\n      ? Object.prototype.hasOwnProperty.call(data, `length`)\n      : false\n    let lengthProperty\n    if (hasLengthProperty) {\n      lengthProperty = (data as IGatsbyNode).length\n      delete (data as IGatsbyNode).length\n    }\n\n    _.each(data, (value, key) => {\n      if (isNode && key === `internal`) {\n        returnData[key] = value\n        return\n      }\n      returnData[key] = sanitizeNode(value as Data, false, path)\n\n      if (returnData[key] !== value) {\n        anyFieldChanged = true\n      }\n    })\n\n    if (hasLengthProperty) {\n      ;(data as IGatsbyNode).length = lengthProperty\n      returnData.length = sanitizeNode(lengthProperty as Data, false, path)\n      if (returnData.length !== lengthProperty) {\n        anyFieldChanged = true\n      }\n    }\n\n    if (anyFieldChanged) {\n      data = omitUndefined(returnData as Data) as Data\n    }\n\n    // arrays and plain objects are supported - no need to to sanitize\n    return data\n  }\n\n  if (!isTypeSupported(data)) {\n    return undefined\n  } else {\n    return data\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;AASA;AACA;AACA;AACA;AACA,MAAMA,aAA4B,GAAGC,IAAI,IAAI;EAC3C,MAAMC,aAAa,GAAG,6BAAgBD,IAAhB,CAAtB;;EACA,IAAIC,aAAJ,EAAmB;IACjB,OAAO,sBAASD,IAAT,EAAeE,CAAC,IAAIA,CAAC,KAAKC,SAA1B,CAAP;EACD;;EAED,OAAQH,IAAD,CAAsCI,MAAtC,CAA6CF,CAAC,IAAIA,CAAC,KAAKC,SAAxD,CAAP;AACD,CAPD;;AAWA;AACA;AACA;AACA;AACA,MAAME,eAAgC,GAAGL,IAAI,IAAI;EAC/C,IAAIA,IAAI,KAAK,IAAb,EAAmB;IACjB,OAAO,IAAP;EACD;;EAED,MAAMM,IAAI,GAAG,OAAON,IAApB;EACA,MAAMO,WAAW,GACfD,IAAI,KAAM,QAAV,IACAA,IAAI,KAAM,QADV,IAEAA,IAAI,KAAM,SAFV,IAGAN,IAAI,YAAYQ,IAJlB;EAMA,OAAOD,WAAP;AACD,CAbD;;AAqBA;AACA;AACA;AACA;AACA;AACA;AACO,MAAME,YAA0B,GAAG,CACxCT,IADwC,EAExCU,MAAM,GAAG,IAF+B,EAGxCC,IAAI,GAAG,IAAIC,GAAJ,EAHiC,KAIrC;EACH,MAAMX,aAAa,GAAG,6BAAgBD,IAAhB,CAAtB;EACA,MAAMa,OAAO,GAAG,uBAAUb,IAAV,CAAhB;;EAEA,IAAIC,aAAa,IAAIY,OAArB,EAA8B;IAC5B,IAAIF,IAAI,CAACG,GAAL,CAASd,IAAT,CAAJ,EAAoB,OAAOA,IAAP;IACpBW,IAAI,CAACI,GAAL,CAASf,IAAT;IAEA,MAAMgB,UAAU,GAAGf,aAAa,GAC3B,EAD2B,GAE3B,EAFL;IAGA,IAAIgB,eAAe,GAAG,KAAtB,CAP4B,CAS5B;;IACA,MAAMC,iBAAiB,GAAGjB,aAAa,GACnCkB,MAAM,CAACC,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCtB,IAArC,EAA4C,QAA5C,CADmC,GAEnC,KAFJ;IAGA,IAAIuB,cAAJ;;IACA,IAAIL,iBAAJ,EAAuB;MACrBK,cAAc,GAAIvB,IAAD,CAAsBwB,MAAvC;MACA,OAAQxB,IAAD,CAAsBwB,MAA7B;IACD;;IAED,oBAAOxB,IAAP,EAAa,CAACyB,KAAD,EAAQC,GAAR,KAAgB;MAC3B,IAAIhB,MAAM,IAAIgB,GAAG,KAAM,UAAvB,EAAkC;QAChCV,UAAU,CAACU,GAAD,CAAV,GAAkBD,KAAlB;QACA;MACD;;MACDT,UAAU,CAACU,GAAD,CAAV,GAAkBjB,YAAY,CAACgB,KAAD,EAAgB,KAAhB,EAAuBd,IAAvB,CAA9B;;MAEA,IAAIK,UAAU,CAACU,GAAD,CAAV,KAAoBD,KAAxB,EAA+B;QAC7BR,eAAe,GAAG,IAAlB;MACD;IACF,CAVD;;IAYA,IAAIC,iBAAJ,EAAuB;MACrB;MAAElB,IAAD,CAAsBwB,MAAtB,GAA+BD,cAA/B;MACDP,UAAU,CAACQ,MAAX,GAAoBf,YAAY,CAACc,cAAD,EAAyB,KAAzB,EAAgCZ,IAAhC,CAAhC;;MACA,IAAIK,UAAU,CAACQ,MAAX,KAAsBD,cAA1B,EAA0C;QACxCN,eAAe,GAAG,IAAlB;MACD;IACF;;IAED,IAAIA,eAAJ,EAAqB;MACnBjB,IAAI,GAAGD,aAAa,CAACiB,UAAD,CAApB;IACD,CAzC2B,CA2C5B;;;IACA,OAAOhB,IAAP;EACD;;EAED,IAAI,CAACK,eAAe,CAACL,IAAD,CAApB,EAA4B;IAC1B,OAAOG,SAAP;EACD,CAFD,MAEO;IACL,OAAOH,IAAP;EACD;AACF,CA5DM"}