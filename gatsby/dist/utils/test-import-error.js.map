{"version":3,"file":"test-import-error.js","names":["testImportError","moduleName","err","code","pnpCode","regex","RegExp","replace","firstLine","toString","split","test"],"sources":["../../src/utils/test-import-error.ts"],"sourcesContent":["export const testImportError = (moduleName: string, err: any): boolean => {\n  // PnP will return the following code when an import is allowed per the\n  // dependency tree rules but the requested file doesn't exist\n  if (\n    err.code === `QUALIFIED_PATH_RESOLUTION_FAILED` ||\n    err.pnpCode === `QUALIFIED_PATH_RESOLUTION_FAILED`\n  ) {\n    return true\n  }\n  const regex = new RegExp(\n    // stderr will show ModuleNotFoundError, but Error is correct since we toString below\n    `Error:\\\\s(\\\\S+\\\\s)?[Cc]annot find module\\\\s.${moduleName.replace(\n      /[-/\\\\^$*+?.()|[\\]{}]/g,\n      `\\\\$&`\n    )}`\n  )\n\n  const [firstLine] = err.toString().split(`\\n`)\n  return regex.test(firstLine.replace(/\\\\\\\\/g, `\\\\`))\n}\n"],"mappings":";;;;;AAAO,MAAMA,eAAe,GAAG,CAACC,UAAD,EAAqBC,GAArB,KAA2C;EACxE;EACA;EACA,IACEA,GAAG,CAACC,IAAJ,KAAc,kCAAd,IACAD,GAAG,CAACE,OAAJ,KAAiB,kCAFnB,EAGE;IACA,OAAO,IAAP;EACD;;EACD,MAAMC,KAAK,GAAG,IAAIC,MAAJ,EACZ;EACC,+CAA8CL,UAAU,CAACM,OAAX,CAC7C,uBAD6C,EAE5C,MAF4C,CAG7C,EALU,CAAd;EAQA,MAAM,CAACC,SAAD,IAAcN,GAAG,CAACO,QAAJ,GAAeC,KAAf,CAAsB,IAAtB,CAApB;EACA,OAAOL,KAAK,CAACM,IAAN,CAAWH,SAAS,CAACD,OAAV,CAAkB,OAAlB,EAA4B,IAA5B,CAAX,CAAP;AACD,CAnBM"}