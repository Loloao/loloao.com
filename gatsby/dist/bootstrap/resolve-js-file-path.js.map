{"version":3,"file":"resolve-js-file-path.js","names":["maybeAddFileProtocol","process","env","JEST_WORKER_ID","module","pathToFileURL","href","resolveJSFilepath","rootDir","filePath","warn","filePathWithJSExtension","endsWith","filePathWithMJSExtension","require","resolve","report","path","relative","_"],"sources":["../../src/bootstrap/resolve-js-file-path.ts"],"sourcesContent":["import path from \"path\"\nimport { pathToFileURL } from \"url\"\nimport report from \"gatsby-cli/lib/reporter\"\n\n/**\n * On Windows, the file protocol is required for the path to be resolved correctly.\n * On other platforms, the file protocol is not required, but supported, so we want to just always use it.\n * Except jest doesn't work with that and in that environment we never add the file protocol.\n */\nexport const maybeAddFileProtocol = process.env.JEST_WORKER_ID\n  ? (module: string): string => module\n  : (module: string): string => pathToFileURL(module).href\n\n/**\n * Figure out if the file path is .js or .mjs without relying on the fs module, and return the file path if it exists.\n */\nexport async function resolveJSFilepath({\n  rootDir,\n  filePath,\n  warn = true,\n}: {\n  rootDir: string\n  filePath: string\n  warn?: boolean\n}): Promise<string> {\n  const filePathWithJSExtension = filePath.endsWith(`.js`)\n    ? filePath\n    : `${filePath}.js`\n  const filePathWithMJSExtension = filePath.endsWith(`.mjs`)\n    ? filePath\n    : `${filePath}.mjs`\n\n  // Check if both variants exist\n  try {\n    if (\n      require.resolve(filePathWithJSExtension) &&\n      require.resolve(filePathWithMJSExtension)\n    ) {\n      if (warn) {\n        report.warn(\n          `The file '${path.relative(\n            rootDir,\n            filePath\n          )}' has both .js and .mjs variants, please use one or the other. Using .js by default.`\n        )\n      }\n      return filePathWithJSExtension\n    }\n  } catch (_) {\n    // Do nothing\n  }\n\n  // Check if .js variant exists\n  try {\n    if (require.resolve(filePathWithJSExtension)) {\n      return filePathWithJSExtension\n    }\n  } catch (_) {\n    // Do nothing\n  }\n\n  try {\n    if (require.resolve(filePathWithMJSExtension)) {\n      return filePathWithMJSExtension\n    }\n  } catch (_) {\n    // Do nothing\n  }\n\n  return ``\n}\n"],"mappings":";;;;;;;;AAAA;;AACA;;AACA;;AAEA;AACA;AACA;AACA;AACA;AACO,MAAMA,oBAAoB,GAAGC,OAAO,CAACC,GAAR,CAAYC,cAAZ,GAC/BC,MAAD,IAA4BA,MADI,GAE/BA,MAAD,IAA4B,IAAAC,kBAAA,EAAcD,MAAd,EAAsBE,IAF/C;AAIP;AACA;AACA;;;;AACO,eAAeC,iBAAf,CAAiC;EACtCC,OADsC;EAEtCC,QAFsC;EAGtCC,IAAI,GAAG;AAH+B,CAAjC,EAQa;EAClB,MAAMC,uBAAuB,GAAGF,QAAQ,CAACG,QAAT,CAAmB,KAAnB,IAC5BH,QAD4B,GAE3B,GAAEA,QAAS,KAFhB;EAGA,MAAMI,wBAAwB,GAAGJ,QAAQ,CAACG,QAAT,CAAmB,MAAnB,IAC7BH,QAD6B,GAE5B,GAAEA,QAAS,MAFhB,CAJkB,CAQlB;;EACA,IAAI;IACF,IACEK,OAAO,CAACC,OAAR,CAAgBJ,uBAAhB,KACAG,OAAO,CAACC,OAAR,CAAgBF,wBAAhB,CAFF,EAGE;MACA,IAAIH,IAAJ,EAAU;QACRM,iBAAA,CAAON,IAAP,CACG,aAAYO,aAAA,CAAKC,QAAL,CACXV,OADW,EAEXC,QAFW,CAGX,sFAJJ;MAMD;;MACD,OAAOE,uBAAP;IACD;EACF,CAfD,CAeE,OAAOQ,CAAP,EAAU,CACV;EACD,CA1BiB,CA4BlB;;;EACA,IAAI;IACF,IAAIL,OAAO,CAACC,OAAR,CAAgBJ,uBAAhB,CAAJ,EAA8C;MAC5C,OAAOA,uBAAP;IACD;EACF,CAJD,CAIE,OAAOQ,CAAP,EAAU,CACV;EACD;;EAED,IAAI;IACF,IAAIL,OAAO,CAACC,OAAR,CAAgBF,wBAAhB,CAAJ,EAA+C;MAC7C,OAAOA,wBAAP;IACD;EACF,CAJD,CAIE,OAAOM,CAAP,EAAU,CACV;EACD;;EAED,OAAQ,EAAR;AACD"}